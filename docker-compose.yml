services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
      - ./backend/static:/app/static
      - ./backend/staticfiles:/app/staticfiles
    working_dir: /app
    environment:
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A core worker --loglevel=info
    volumes:
      - ./backend:/app

    working_dir: /app
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env
    depends_on:
      - redis
      - backend
    networks:
      - app-network

  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A core beat --loglevel=info
    volumes:
      - ./backend:/app

    working_dir: /app
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env
    depends_on:
      - redis
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge 